\documentclass[a4paper]{article}
\textwidth 6.75in              % set dimensions before fancyhdr 
\textheight 9.5in
\topmargin -.875in
\oddsidemargin -.125in
\evensidemargin -.125in
 
\usepackage{hyperref}
\usepackage{subfigure}

\hypersetup{
    colorlinks=true, %set true if you want colored links
    linktoc=all,     %set to all if you want both sections and subsections linked
    linkcolor=blue,  %choose some color if you want links to stand out
}

\begin{document}
\title{Low miR-200 expression related drug selection}
\author{Quanhu Sheng, Christopher Pendleton}
\maketitle
\tableofcontents

<<setting, echo=FALSE>>=
opts_chunk$set(tidy=TRUE, fig.align='center', size='footnotesize', comment="", fig.width=5, fig.hight=5)
@

\newpage
\section{Purpose}
The miR-200 family contains miR-200a, miR-200b, miR-200c, miR-141, and miR-429. There are growing evidences to suggest that miR-200 microRNAs are involved in cancer metastasis. The project goal is using IC50 data to select drugs that target cell lines with low miR-200 expression.\\

\section{Selection of miR-200 expression related genes}
Here, TCGA paired BRCA miRNAseq(Table \ref{tab:tcgamirna}) and RNAseq (Table \ref{tab:tcgarnaseq}) data containing 877 samples was used to find a gene set in which the expression level of the gene is highly negative correlated to the expression level of miR-200 family. \\

<<mirnaData, echo=FALSE, warning=FALSE, error=FALSE, message=FALSE, results='asis', cache=TRUE>>=
source("E:/sqh/Dropbox/program/r/mirna/chris_v2/common.r")
mirnaCount<-loadData("TCGA_mirnaseq_20130521_brca_count.csv")
target<-mirnaCount[row.names(mirnaCount) %in% targetnames,]
print(xtable(t(target)[c(1:5),], caption = "miRNAseq data", label = "tab:tcgamirna"), include.rownames=T, caption.placement="top")
@

<<rnaseqData, echo=FALSE, warning=FALSE, error=FALSE, message=FALSE, results='asis', cache=TRUE>>=
source("E:/sqh/Dropbox/program/r/mirna/chris_v2/common.r")
rnaseqCount<-loadData("TCGA_rnaseqv2_20130521_brca_count.csv")
print(xtable(t(rnaseqCount)[c(1:5),c(1:7)], caption = "RNAseq data", label = "tab:tcgarnaseq"), include.rownames=T, caption.placement="top")
@

The gene list were filtered out by following steps:
\begin{enumerate}
  \item The variance stabilizing transformed expression values of 1046 miRNAs were calculated using DESeqV2
  \item The expression values of five miR-200 members were kept
<<mirna, echo=FALSE, warning=FALSE, message=FALSE, cache=TRUE>>=
source("E:/sqh/Dropbox/program/r/mirna/chris_v2/common.r")

getExpressionByDESeq2<-function(mirnaCount){
  design<-colnames(mirnaCount)
  colData=data.frame(condition=design)
  dds=DESeqDataSetFromMatrix(countData = mirnaCount,
                             colData = colData,
                             design = ~ condition)
  dds=varianceStabilizingTransformation(dds)
  expr<-as.matrix(assay(dds))
  colnames(expr)<-colnames(mirnaCount)
  return (expr)
}

if(!file.exists(mirnaTargetNormFile)){
  #read mirna data
  mirnaCount=loadData("TCGA_mirnaseq_20130521_brca_count.csv")
  mirnaNorm<-getExpressionByDESeq2(mirnaCount)
  targetNorm<-data.frame(t(mirnaNorm[rownames(mirnaNorm) %in% targetnames,]))
  colnames(targetNorm)<-c("mir141", "mir200a", "mir200b", "mir200c", "mir429")
  saveData(targetNorm,mirnaTargetNormFile)
}else{
  targetNorm=loadData(mirnaTargetNormFile)
}
@
  \item 16044 out of 20501 genes observed in at least 90\% samples were kept
  \item The variance stabilizing transformed expression values of 16044 genes were calculated using DESeqV2
<<rnaseq, echo=FALSE, warning=FALSE, message=FALSE, cache=TRUE>>=
source("E:/sqh/Dropbox/program/r/mirna/chris_v2/common.r")
if(!file.exists(rnaseqNormFile)){
  #read rnaseq data
  rnaseqCount<-loadData("TCGA_rnaseqv2_20130521_brca_count.csv")

  #keep only observed in at least 90% samples
  samplecount<-ncol(rnaseqCount) * 0.9
  keep<-rowSums(rnaseqCount > 0) >= samplecount
  rnaseqCount<-rnaseqCount[keep,]
  rnaseqNorm<-getExpressionByDESeq2(rnaseqCount)
  rnaseqNorm<-t(rnaseqNorm)
  saveData(rnaseqNorm, rnaseqNormFile)
}else{
  rnaseqNorm = loadData(rnaseqNormFile)
}
@
  \item 9069 out of 16044 common genes of rnaseq dataset, HG-U133A, HG-U133A v2 gene list were kept
  \item The spearman correlation coefficient between each gene and each miR-200 member was calculated
  \item For each miR-200 member, the genes were ranked by the correlation coefficient (the most negative correlation coefficient ranked as top 1)
  \item For each gene, the overall rank (rank of correlation coefficient with miR-200 family) were calculated by the mean of five ranks in each miR-200 member
  \item Genes were sorted by the the overall rank (table \ref{tab:corr})
<<correlation, warning=FALSE, message=FALSE, cache=TRUE>>=
source("E:/sqh/Dropbox/program/r/mirna/chris_v2/common.r")
rnaseqNorm=loadData(rnaseqNormFile)

nci60_mrna=read.table("NCI60_mRNA_GSE5846.tsv", sep="\t", 
                      header=T, check.names=FALSE, row.names=1)
commongenes=colnames(rnaseqNorm) %in% rownames(nci60_mrna)
rnaseqNorm=rnaseqNorm[,commongenes]

ic50mrna<-read.csv("IC50/gdsc_en_input_w2.csv", head=T, row.names=1)
commongenes=colnames(rnaseqNorm) %in% rownames(ic50mrna)
rnaseqNorm=rnaseqNorm[,commongenes]

targetNorm=loadData(mirnaTargetNormFile)

allcorrs=apply(targetNorm, 2, function(y){
  corrs=apply(rnaseqNorm, 2, function(x){
    cor(y, x, method="spearman", use="pa")
  })
  return (corrs)
})

allranks=apply(allcorrs, 2, function(x){
  return(rank(x, ties.method="average"))
})

meanrank=apply(allranks,1,mean)

rankdata=cbind(allcorrs, allranks, meanrank)
rankdata=rankdata[order(meanrank),]

colnames(rankdata)<-c("spcorr_mir141","spcorr_mir200a","spcorr_mir200b","spcorr_mir200c","spcorr_mir429",
                      "rank_mir141","rank_mir200a","rank_mir200b","rank_mir200c","rank_mir429",
                      "rank_mir200_family")

saveData(rankdata, "TCGA_mir200_20130521_brca.csv")
@

<<genes, echo=FALSE, warning=FALSE, message=FALSE, cache=TRUE, results='asis'>>=
source("E:/sqh/Dropbox/program/r/mirna/chris_v2/common.r")
rankdata=loadData("TCGA_mir200_20130521_brca.csv")
print(xtable(rankdata[c(1:10),c(1:5,11)], caption = "Genes that negative correlated with miR-200 family", label = "tab:corr"), include.rownames=T, caption.placement="top", size="\\tiny")
@
\end{enumerate}

\section{Validate selected genes with NCI60 data}
\begin{enumerate}
  \item The expression values of 783 miRNAs from 59 microarray samples were used
  \item The rank of each miR-200 member was calculated in each sample
  \item The overall rank of miR-200 family was defined as the mean of the five ranks of miR-200 member
  \item The samples were sorted by the overall rank of miR-200 family
  \item Top 100 genes with most negative correlation coeffieient with miR-200 family were used to draw heatmap (Figure \ref{fig:NCI60})
<<NCI60, warning=FALSE, message=FALSE, fig.cap="Correlation coefficients between miR-200 and selected genes", fig.height=5.5, fig.pos="!h">>=
source("E:/sqh/Dropbox/program/r/mirna/chris_v2/common.r")

#rank samples by miR-200 expression level
nci60_mirna=read.table("NCI60_miRNA_GSE26375.tsv", sep="\t", header=T, check.names=FALSE, row.names=1)
nci60_mirna_target_ranked=getTargetMirnaRankOrdered(nci60_mirna)
nci60_mirna_colors=colorRampPalette(c("green", "black", "red"))(ncol(nci60_mirna_target_ranked))
names(nci60_mirna_colors)=colnames(nci60_mirna_target_ranked)

#get mRNA expression level
nci60_mrna=read.table("NCI60_mRNA_GSE5846.tsv", sep="\t", header=T, check.names=FALSE, row.names=1)
common=colnames(nci60_mrna) %in% colnames(nci60_mirna)
only<-colnames(nci60_mrna)[!common]
print(paste0("No mirna data of ", only))
nci60_mrna_common<-as.matrix(nci60_mrna[,common])

#read gene list ranked by correlation coefficient
rankdata=loadData("TCGA_mir200_20130521_brca.csv")

legendfun<-function() {
  plot(0, xaxt = "n", bty = "n", yaxt = "n", type = "n", xlab = "", ylab = "")
  legend("bottom", legend = c("Low","High"), col = c("green","red"), lwd=2, bty = "n")
}

top=100
  ingenelist=rownames(nci60_mrna) %in% rownames(rankdata)[1:top]
  nci60_mrna_filtered=nci60_mrna[ingenelist,]

  y<-as.matrix(nci60_mrna_filtered[,common])
  hr <- hclust(as.dist(1-cor(t(y), method="pearson", use="pa")), method="average"); 
  hc <- hclust(as.dist(1-cor(y, method="pearson", use="pa")), method="average") 

  mircols<-nci60_mirna_colors[colnames(y)]
  clab=cbind(miRNA=mircols)
  if(top == 100){
    heatmap3(y, Rowv=as.dendrogram(hr), Colv=as.dendrogram(hc), col=hmcols, ColSideColors=clab, cexCol=0.5, cexRow=0.4, main=paste0("Top ", top, " genes"), legendfun=legendfun ) 
  }else{
    heatmap3(y, Rowv=as.dendrogram(hr), Colv=as.dendrogram(hc), col=hmcols, ColSideColors=clab, cexCol=0.5, labRow="", main=paste0("Top ", top, " genes"), legendfun=legendfun ) 
  }
@

  \newpage
  \item Draw boxplot for miR-200 family by the spearman correlation coefficients with selected genes(Figure \ref{fig:NCI60_cellline})
<<NCI60_cellline, fig.cap="Spearman correlation coefficients between miR-200 family and selected genes", fig.height=2, fig.pos= "!h">>=
source("E:/sqh/Dropbox/program/r/mirna/chris_v2/common.r")

#rank samples by miR-200 expression level
nci60_mirna=read.table("NCI60_miRNA_GSE26375.tsv", sep="\t", header=T, check.names=FALSE, row.names=1)
nci60_mirna_target_ranked=getTargetMirnaRankOrdered(nci60_mirna)
nci60_mirna_colors=colorRampPalette(c("green", "black", "red"))(ncol(nci60_mirna_target_ranked))
names(nci60_mirna_colors)=colnames(nci60_mirna_target_ranked)

#get mRNA expression level
nci60_mrna=read.table("NCI60_mRNA_GSE5846.tsv", sep="\t", header=T, check.names=FALSE, row.names=1)
common=colnames(nci60_mrna) %in% colnames(nci60_mirna)
only<-colnames(nci60_mrna)[!common]
print(paste0("No mirna data of ", only))
nci60_mrna_common<-nci60_mrna[,common]

#read gene list ranked by correlation coefficient
rankdata=loadData("TCGA_mir200_20130521_brca.csv")
ingenelist=rownames(nci60_mrna) %in% rownames(rankdata)[1:100]
nci60_mrna_filtered=nci60_mrna_common[ingenelist,]


nci60_mrna_filtered=nci60_mrna_filtered[,order(colnames(nci60_mrna_filtered))]
nci60_mirna_filtered=nci60_mirna[rownames(nci60_mirna) %in% targetnames, order(colnames(nci60_mirna))]

allcorrs=apply(nci60_mirna_filtered, 1, function(y){
  corrs=apply(nci60_mrna_filtered, 1, function(x){
    cor(y, x, method="spearman",use="pa")
  })
  return (corrs)
})

allcorrsmedian=apply(allcorrs, 2, median)
allcorrranked<-allcorrs[,order(allcorrsmedian)]

par(mar = c(3,8,1,1))
boxplot(allcorrranked, horizontal=TRUE, las=1, ylim=c(-1,1) )
@
\end{enumerate}

\newpage
\section{Selection of drugs targeting low miR-200 expressed cell lines}
The IC50 data was downloaded from \url{http://www.cancerrxgene.org/downloads/}. IC\_50 means half maximal inhibitory (50\%) drug concentrations (natural log microMolar). The data includes cell line drug sensitivity data, mutations in cancer genes and tissue type. It includes 714 cell lines and 138 drugs. There are 43 breast cancer cell lines with IC50 drug resistent informaton. 4 out of 43 cell lines ("HCC1569", "UACC-893", "AU565" and "BT-474") missed corresponding mRNA expression information. Finally, we got 39 breast cancer cell lines with IC50 values from 138 drugs (Table \ref{tab:ic50drug}) and mRNA expression values of top 100 miR-200 negative correlated genes (Table \ref{tab:ic50gene}).\\

<<ic50, echo=FALSE, warning=FALSE, error=FALSE, message=FALSE, results='asis', cache=TRUE>>=
source("E:/sqh/Dropbox/program/r/mirna/chris_v2/common.r")
ic50file<-"IC50/gdsc_manova_input_w2_breastcancer_ic50.csv"
if(!file.exists(ic50file)){
  ic50<-loadData("IC50/gdsc_manova_input_w2.csv")
  data<-ic50[ic50[,3]=="breast",]
  iccol<-grep("IC_50$", colnames(data),  perl=TRUE)
  drug_ic50<-data[,iccol]
  drug_ic50<-drug_ic50[order(rownames(drug_ic50)),order(colnames(drug_ic50))]
  saveData(drug_ic50, ic50file)
}else{
  drug_ic50<-loadData(ic50file)
}

top=100
mrna_IC50_file<-paste0("IC50/gdsc_en_input_w2_top_", top, ".csv")
if(!file.exists(mrna_IC50_file)){
  ic50mrna<-loadData("IC50/gdsc_en_input_w2.csv")
  rankdata=loadData("TCGA_mir200_20130521_brca.csv")
  ingenelist=rownames(ic50mrna) %in% rownames(rankdata)[1:top]
  mrna_ic50<-t(ic50mrna[ingenelist, ])
  saveData(mrna_ic50, mrna_IC50_file)
}else{
  mrna_ic50<-read.csv(mrna_IC50_file, head=T, row.names=1, check.names=F)
}

common_celllines<-row.names(drug_ic50) %in% row.names(mrna_ic50)
drug_ic50_final<-drug_ic50[common_celllines,]
drug_ic50_final<-drug_ic50_final[order(rownames(drug_ic50_final)), order(colnames(drug_ic50_final))]
saveData(drug_ic50_final, "IC50_drug.csv")

mrna_common<-row.names(mrna_ic50) %in% row.names(drug_ic50_final)
mrna_ic50_final<-mrna_ic50[mrna_common,]
mrna_ic50_final<-mrna_ic50_final[order(rownames(mrna_ic50_final)), order(colnames(mrna_ic50_final))]
saveData(mrna_ic50_final, "IC50_genes.csv")
@

<<ic50_drug, echo=FALSE, warning=FALSE, message=FALSE, cache=TRUE, results='asis'>>=
source("E:/sqh/Dropbox/program/r/mirna/chris_v2/common.r")
drug_ic50_final=loadData("IC50_drug.csv")
print(xtable(drug_ic50_final[c(1:10),c(1:6)], caption = "Drug resistance IC50 data for breast cancer cell lines", label = "tab:ic50drug"), include.rownames=T, caption.placement="top", size="\\tiny")
@

<<ic50_gene, echo=FALSE, warning=FALSE, message=FALSE, cache=TRUE, results='asis'>>=
source("E:/sqh/Dropbox/program/r/mirna/chris_v2/common.r")
mrna_ic50_final=loadData("IC50_genes.csv")
print(xtable(mrna_ic50_final[c(1:10),c(1:10)], caption = "Expression values of top 100 miR-200 negative correlated genes", label = "tab:ic50gene"), include.rownames=T, caption.placement="top", size="\\tiny")
@

We calculated the spearman correlation between each drug IC50 and each gene expression value in 39 breast cancer cell lines. The drugs were ranked by the median of the spearman correlation coefficients (Figure \ref{tab:ic50drug}). Top 20 drugs whose IC50 values positive related to those gene (may negative related to miR-200 family) were illustrated in Table \ref{tab:drugcorr}.
<<discovery, fig.cap="Spearman correlation coefficient between drug IC50 and selected gene expression level", fig.height=9>>=
source("E:/sqh/Dropbox/program/r/mirna/chris_v2/common.r")

drugfile<-"drug_ranked.csv"
if(!file.exists(drugfile)){
  drug_ic50_final=loadData("IC50_drug.csv")
  mrna_ic50_final=loadData("IC50_genes.csv")

  allcorrs=apply(drug_ic50_final, 2, function(y){
    corrs=apply(mrna_ic50_final, 2, function(x){
      cor(y, x, method="spearman",use="pa")
    })
    return (corrs)
  })

  allcorrsmedian=apply(allcorrs, 2, median)
  allcorrranked<-allcorrs[,order(allcorrsmedian)]
  celllines<-unlist(lapply(colnames(allcorrranked), function(x){
    unlist(substring(x, 1, nchar(x) - 6))
  }))
  colnames(allcorrranked)<-celllines
  saveData(allcorrranked, drugfile)
}else{
  allcorrranked<-loadData(drugfile)
}

par(mar = c(10,20,3,3), cex=0.25)
boxplot(allcorrranked, horizontal=TRUE, las=1, ylim=c(-1,1))
par(cex=1)
mtext("Spearman correlation coefficients", side=1, outer=F, adj=0.5, padj=2, cex=1)
mtext("Drugs", side=2, outer=F, adj=0.5, padj=-3, cex=1)
@

<<discovery_table, echo=FALSE, warning=FALSE, error=FALSE, message=FALSE, results='asis'>>=
source("E:/sqh/Dropbox/program/r/mirna/chris_v2/common.r")

drugfile<-"drug_ranked.csv"
allcorrranked<-loadData(drugfile)

allcorrsmedian<-apply(allcorrranked, 2, median)
allcorrsmedian<-allcorrsmedian[order(allcorrsmedian, decreasing=FALSE)]
allcorrsmedian<-data.frame(Drugs=names(allcorrsmedian), Corr_median=allcorrsmedian)
write.csv(allcorrsmedian, file="drug_ranked_median.csv", row.names=F)
print(xtable(allcorrsmedian, caption = "57 drugs whose IC50 may negative correlated to miR-200 family expression level", label = "tab:drugcorr"), include.rownames=F, caption.placement="top")
@

\end{document}